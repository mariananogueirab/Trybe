{"ast":null,"code":"import { TODO_ACTIONS } from '../actions/todoActions';\nconst INITIAL_STATE = [];\n\nfunction todoReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case TODO_ACTIONS.ADD_TODO:\n      return [...state, {\n        id: action.payload.id,\n        text: action.payload.text,\n        completed: false\n      }];\n\n    case TODO_ACTIONS.REMOVE_TODO:\n      return state.filter(todo => todo.id !== action.payload.id);\n\n    case TODO_ACTIONS.TOGGLE_TODO:\n      return state.map(todo => todo.id === action.payload.id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n\n    case TODO_ACTIONS.CLEAR_TODOS:\n      return [];\n\n    default:\n      return state;\n  }\n}\n\nexport default todoReducer;","map":{"version":3,"sources":["/home/mariana/Documentos/Trybe/trybe-exercises/Front-End/Bloco 16/todo-list/src/reducers/todoReducer.js"],"names":["TODO_ACTIONS","INITIAL_STATE","todoReducer","state","action","type","ADD_TODO","id","payload","text","completed","REMOVE_TODO","filter","todo","TOGGLE_TODO","map","CLEAR_TODOS"],"mappings":"AAAA,SAASA,YAAT,QAA6B,wBAA7B;AAEA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,WAAT,CAAqBC,KAAK,GAAGF,aAA7B,EAA4CG,MAA5C,EAAoD;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,YAAY,CAACM,QAAlB;AACE,aAAO,CACL,GAAGH,KADE,EAEL;AAAEI,QAAAA,EAAE,EAAEH,MAAM,CAACI,OAAP,CAAeD,EAArB;AAAyBE,QAAAA,IAAI,EAAEL,MAAM,CAACI,OAAP,CAAeC,IAA9C;AAAoDC,QAAAA,SAAS,EAAE;AAA/D,OAFK,CAAP;;AAIF,SAAKV,YAAY,CAACW,WAAlB;AACE,aAAOR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAAlD,CAAP;;AACF,SAAKP,YAAY,CAACc,WAAlB;AACE,aAAOX,KAAK,CAACY,GAAN,CAAWF,IAAD,IACfA,IAAI,CAACN,EAAL,KAAYH,MAAM,CAACI,OAAP,CAAeD,EAA3B,GACI,EAAE,GAAGM,IAAL;AAAWH,QAAAA,SAAS,EAAE,CAACG,IAAI,CAACH;AAA5B,OADJ,GAEIG,IAHC,CAAP;;AAKF,SAAKb,YAAY,CAACgB,WAAlB;AACE,aAAO,EAAP;;AACF;AACE,aAAOb,KAAP;AAjBJ;AAmBD;;AAED,eAAeD,WAAf","sourcesContent":["import { TODO_ACTIONS } from '../actions/todoActions';\n\nconst INITIAL_STATE = [];\n\nfunction todoReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case TODO_ACTIONS.ADD_TODO:\n      return [\n        ...state,\n        { id: action.payload.id, text: action.payload.text, completed: false },\n      ];\n    case TODO_ACTIONS.REMOVE_TODO:\n      return state.filter((todo) => todo.id !== action.payload.id);\n    case TODO_ACTIONS.TOGGLE_TODO:\n      return state.map((todo) =>\n        todo.id === action.payload.id\n          ? { ...todo, completed: !todo.completed }\n          : todo,\n      );\n    case TODO_ACTIONS.CLEAR_TODOS:\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default todoReducer;\n"]},"metadata":{},"sourceType":"module"}