{"ast":null,"code":"var _jsxFileName = \"/home/mariana/Documentos/Trybe/trybe-exercises/Front-End/Bloco 16/todo-list/src/App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Todo from './components/Todo';\nimport { addTodo, clearTodos } from './actions/todoActions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = ({\n      target\n    }) => {\n      this.setState({\n        todoInput: target.value\n      });\n    };\n\n    this.handleClick = () => {\n      const {\n        todoInput\n      } = this.state;\n      const {\n        todos,\n        addTodoClick\n      } = this.props;\n      addTodoClick({\n        id: todos.length,\n        text: todoInput\n      });\n      this.setState({\n        todoInput: ''\n      });\n    };\n\n    this.state = {\n      todoInput: ''\n    };\n  }\n\n  render() {\n    const {\n      todoInput\n    } = this.state;\n    const {\n      todos,\n      clearTodosClick\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        value: todoInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.handleClick,\n        children: \"add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: todos && todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 40\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: clearTodosClick,\n        children: \"clear todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  // a chave pode ter qualquer nome\n  todos: state.todoReducer // tem que ver se aqui vou ter que alterar por conta do root (state.todoReducer.state), acredito que sim, então já vou alterar\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  clearTodosClick: () => dispatch(clearTodos()),\n  addTodoClick: todo => dispatch(addTodo(todo))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/mariana/Documentos/Trybe/trybe-exercises/Front-End/Bloco 16/todo-list/src/App.js"],"names":["React","connect","Todo","addTodo","clearTodos","App","Component","constructor","props","handleChange","target","setState","todoInput","value","handleClick","state","todos","addTodoClick","id","length","text","render","clearTodosClick","map","todo","index","mapStateToProps","todoReducer","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,uBAApC;AAEA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,YARmB,GAQJ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAC7B,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAEF,MAAM,CAACG;AADN,OAAd;AAGD,KAZkB;;AAAA,SAcnBC,WAdmB,GAcL,MAAM;AAClB,YAAM;AAAEF,QAAAA;AAAF,UAAgB,KAAKG,KAA3B;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAA0B,KAAKT,KAArC;AAEAS,MAAAA,YAAY,CAAC;AAAEC,QAAAA,EAAE,EAAEF,KAAK,CAACG,MAAZ;AAAoBC,QAAAA,IAAI,EAAER;AAA1B,OAAD,CAAZ;AAEA,WAAKD,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAvBkB;;AAGjB,SAAKG,KAAL,GAAa;AACXH,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAmBDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAgB,KAAKG,KAA3B;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASM,MAAAA;AAAT,QAA6B,KAAKd,KAAxC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAG,KAAKC,YAAnC;AAAkD,QAAA,KAAK,EAAEG;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAG,KAAKE,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBACGE,KAAK,IACJA,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBAAiB,QAAC,IAAD;AAAkB,UAAA,IAAI,EAAED;AAAxB,WAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAFJ;AAAA;AAAA;AAAA;AAAA,cANF,eAWE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAGH,eAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AA7C+B;;AAgDlC,MAAMI,eAAe,GAAIX,KAAD,KAAY;AAAE;AACpCC,EAAAA,KAAK,EAAED,KAAK,CAACY,WADqB,CACR;;AADQ,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,eAAe,EAAE,MAAMO,QAAQ,CAACzB,UAAU,EAAX,CADS;AAExCa,EAAAA,YAAY,EAAGO,IAAD,IAAUK,QAAQ,CAAC1B,OAAO,CAACqB,IAAD,CAAR;AAFQ,CAAf,CAA3B;;AAKA,eAAevB,OAAO,CAACyB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CvB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Todo from './components/Todo';\n\nimport { addTodo, clearTodos } from './actions/todoActions';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todoInput: '',\n    };\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      todoInput: target.value,\n    });\n  }\n\n  handleClick = () => {\n    const { todoInput } = this.state;\n    const { todos, addTodoClick } = this.props;\n\n    addTodoClick({ id: todos.length, text: todoInput });\n\n    this.setState({\n      todoInput: '',\n    });\n  }\n\n  render() {\n    const { todoInput } = this.state;\n    const { todos, clearTodosClick } = this.props;\n\n    return (\n      <div className=\"App\">\n        <input type=\"text\" onChange={ this.handleChange } value={todoInput} />\n        <button type=\"button\" onClick={ this.handleClick }>\n          add todo\n        </button>\n\n        <ul className=\"todo-list\">\n          {todos &&\n            todos.map((todo, index) => <Todo key={index} todo={todo} />)}\n        </ul>\n\n        <button type=\"button\" onClick={ clearTodosClick }>clear todos</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ // a chave pode ter qualquer nome\n  todos: state.todoReducer, // tem que ver se aqui vou ter que alterar por conta do root (state.todoReducer.state), acredito que sim, então já vou alterar\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  clearTodosClick: () => dispatch(clearTodos()),\n  addTodoClick: (todo) => dispatch(addTodo(todo)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}